#BlueJ class context
comment0.target=PrimitiveJavaEditor
comment1.params=
comment1.target=void\ spellCheckAll()
comment1.text=\r\n\r\n\ \ public\ boolean\ find\ (String\ x)\ \r\n\ \ {\ String\ word;\r\n\ \ \ \ \ \ ListIterator<String>\ itr\ \=\ ReadFiles.textFile.listIterator();\r\n\ \ \ \ \ while\ (itr.hasNext()){\r\n\ \ \ \ \ word\=\ \ itr.next().trim();\r\n\ \ \ \ //word\=\ word.replaceAll("[\\\\[\\\\]_\:\\"'`?;0-9;()-/.,*\!\ ]",\ "").toLowerCase();\r\n\ \ \ \ //\ System.out.println(word);\r\n\ \ \ \ \ if\ (word.equals(x))\ {\r\n\ \ \ \ \ \ \ \ \ return\ true;\ \r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ }\r\n\ \ \ \ \ \ \ \ return\ false;\r\n\ \ \ \ }\r\n\ \ \ \ //\ Looks\ for\ a\ word\ "x"\ in\ the\ file\ and\ returns\ true\ if\ found\ or\ false\ otherwise.\r\n\r\n\r\npublic\ \ boolean\ findReplace\ (String\ find,\ String\ replace)\ \r\n\r\n\ \ \ {\r\n\ \ \ \ \ \ \ int\ index;\r\n\ \ \ \ \ \ index\ \=\ ReadFiles.textFile.indexOf(find);\r\n\ \ \ \ \ \ \ if\ (index\ \!\=\ -1)\ {\r\n\ \ \ \ \ \ \ \ \ \ \ String\ prev\ \=\ ReadFiles.textFile.set(index,replace);\r\n\ \ \ \ \ \ \ \ \ \ \ return\ true;\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ else\ return\ false;\r\n\ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ //\ looks\ for\ the\ first\ occurrence\ of\ word\ "x"\ in\ the\ file\ and\ replaces\ it\ with\ word\ "y"\ if\ found\ returning\ true,\ false\ otherwise.\r\n\r\n\r\n\r\npublic\ \ boolean\ findInsert\ (String\ find,\ String\ insert)\ {\ \r\n\ //\ looks\ for\ the\ first\ occurrence\ of\ word\ "x"\ in\ the\ file\ and\ then\ insert\ "y"\ right\ after\ "x",\ if\ x\ is\ found,\ returning\ true,\ false\ otherwise.\ \ \r\n\r\n\ \ \ \ int\ index;\r\n\ \ \ \ \ \ \ index\ \=\ ReadFiles.textFile.indexOf(find);\r\n\ \ \ \ \ \ \ if\ (index\ \!\=\ -1)\ {\r\n\ \ \ \ \ \ \ \ \ \ ReadFiles.textFile.add(index+1,insert);\r\n\ \ \ \ \ \ \ \ \ \ \ return\ true;\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ else\ return\ false;\r\n\ \ \ \ }\r\n\r\n\r\n\r\n\ public\ boolean\ delete\ (String\ del)\ {\r\n\ \ \ \ \ //\ looks\ for\ the\ first\ occurrence\ of\ word\ "x"\ in\ the\ file\ and\ deletes\ it\ from\ the\ file,\ returning\ true\ if\ x\ is\ found,\ returning\ false\ otherwise.\r\n\ \ \ \ \ \r\n\ \ \ \ \ return\ (ReadFiles.textFile.removeFirstOccurrence(del));\r\n\ \ \ \ }\r\n\ \ \ \ \ \r\n\r\n\ \ \ \ \ public\ String\ spellCheck\ ()\ {\ //\ finds\ the\ first\ occurrence\ of\ spelling\ error\ and\ returns\ the\ misspelled\ word.\ If\ no\ word\ is\ misspelled\ returns\ "Spell\ Check\ Passed".\r\n\ \ \ \ \ \ \ \ \ \r\n\ \ \ \ String\ word;\r\n\ \ \ \ ListIterator<String>\ itr\ \=\ ReadFiles.textFile.listIterator();\r\n\ \ \ \ \ while\ (itr.hasNext()){\r\n\ \ \ \ \ word\=\ \ itr.next().trim();\r\n\ \ \ \ \ \r\n\ \ \ \ //\ word\=\ word.replaceAll("[\\\\[\\\\]_\:\\"'`?;0-9;()-/.,*\!\ ]",\ "").toLowerCase();\r\n\ \ \ \ \ if\ (\!ReadFiles.wordList.contains(word))\ return\ word;\r\n\ \ \ \ }\r\n\ \ \ \ return\ "no\ spelling\ errors";\r\n\ \ \ \ \ \r\n\ }\r\n\r\n\r\n
numComments=2
